<?php

namespace PaBundle\Repository;

/**
 * PlanSondageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlanSondageRepository extends \Doctrine\ORM\EntityRepository
{
    public function removeTable()
	{
		$db = $this->_em->getConnection();
		$db->beginTransaction();
			try {

				$sql_del = "DELETE FROM fichier_global";
				$stmt_del = $db->prepare( $sql_del );
				$stmt_del->execute();
				
				$sql_reset = "ALTER TABLE fichier_global AUTO_INCREMENT = 1";
				$stmt_reset = $db->prepare( $sql_reset );
				$stmt_reset->execute();

				$db->commit();
				return true;
			}
			catch (Exception $e) {
				// Rollback the failed transaction attempt
				$db->rollback();
				throw $e;
				return false;
			}
	}

    public function getDateLastImport( $table )
	{
		$db = $this->_em->getConnection();

		$query = "SELECT DISTINCT(date_importation) as date FROM $table";
		$stmt = $db->prepare( $query );
		$stmt->execute();
		$result = $stmt->fetchAll();

		return $result;
	}

    public function insertDatas( $list_lignes )
	{	
		if( $list_lignes[0][0] != 'id' )
		{
			$db = $this->_em->getConnection();
			$db->beginTransaction();
				
			try {
				
				$query = "INSERT INTO fichier_global VALUES(";
				$query .= $db->quote( $list_lignes[0][0] ).",";
				$query .= $db->quote( $list_lignes[0][1] ).",";
				$query .= $db->quote( $list_lignes[0][2] ).",";
				$query .= $db->quote( $list_lignes[0][3] ).",";
				$query .= $db->quote( $list_lignes[0][4] ).",";
				$query .= $db->quote( $list_lignes[0][5] ).",";
				$query .= $db->quote( $list_lignes[0][6] ).",";
				$query .= $db->quote( $list_lignes[0][7] ).",";
				$query .= $db->quote( $list_lignes[0][8] ).",";
				$query .= $db->quote( $list_lignes[0][9] ).",";
				$query .= $db->quote( $list_lignes[0][10] ).",";
				$query .= $db->quote( $list_lignes[0][11] ).",";
				$query .= $db->quote( $list_lignes[0][12] ).",";
				$query .= $db->quote( $list_lignes[0][13] ).",";
				$query .= $db->quote( $list_lignes[0][14] ).",";
				$query .= $db->quote( $list_lignes[0][15] ).",";
				$query .= $db->quote( $list_lignes[0][16] ).",";
				$query .= $db->quote( $list_lignes[0][17] ).",";
				$query .= $db->quote( $list_lignes[0][18] ).",";
				$query .= $db->quote( $list_lignes[0][19] ).",";
                $query .= $db->quote( date('d/m/Y h:i:s', time()) )."";
					
				$query .= ")";
	
		$stmt = $db->prepare($query);
		$stmt->execute();
		$db->commit();
		return true;
		
	} catch (Exception $e) {
		// Rollback the failed transaction attempt
		$db->rollback();
		throw $e;
		return false;
	}
        }
    }

    public function getFichierGlobal( )
	{
		$db = $this->_em->getConnection();

		$query = "SELECT * FROM fichier_global";
		$stmt = $db->prepare( $query );
		$stmt->execute();
		$result = $stmt->fetchAll();

		return $result;
	}

    public function getZonesEnqueteurs( $mois )
	{
		$db = $this->_em->getConnection();

		$query = "SELECT * FROM zone_enq WHERE mois IN($mois)";
		$stmt = $db->prepare( $query );
		$stmt->execute();
		$result = $stmt->fetchAll();

		return $result;
	}

	public function getZonesFichierGlobal( $mois )
	{
		$db = $this->_em->getConnection();

		$query = "SELECT DISTINCT(zone) as zone FROM fichier_global WHERE mois IN('$mois')";
		$stmt = $db->prepare( $query );
		$stmt->execute();
		$result = $stmt->fetchAll();

		return $result;
	}

	public function remove( $id )
	{
		$db = $this->_em->getConnection();

		$query = "DELETE FROM zone_enq WHERE id = $id";
		$stmt = $db->prepare( $query );
		$stmt->execute();
	}

	public function getInfosFichierGlobal( $mois, $zone )
	{
		$db = $this->_em->getConnection();

		$query = "SELECT fg.id as id, fg.ligne_numero as ligne, fg.libelle_commercial as libelle_commercial , fg.zone as zone, fg.ordre as ordre, 
						fg.numero_emplacement as numero_emplacement, fg.nom_arret as nom_arret, fg.destination as destination,
							qs.valid as valid, qs.generated as `generated`
						FROM fichier_global fg LEFT JOIN questionnaire_s qs
						ON fg.id = qs.id_global
						WHERE fg.mois IN('$mois') AND fg.zone IN('$zone')";
		$stmt = $db->prepare( $query );
		$stmt->execute();
		$result = $stmt->fetchAll();

		return $result;
	}

	public function getInfosZoneEnq( $mois, $zone )
	{
		$db = $this->_em->getConnection();

		$query = "SELECT enqueteur, date, plage_horaire_debut, plage_horaire_fin
						FROM zone_enq
						WHERE mois IN('$mois') AND zone IN('$zone')";
		$stmt = $db->prepare( $query );
		$stmt->execute();
		$result = $stmt->fetchAll();

		return $result;
	}

	public function saveZoneEnq( $mois, $zone, $enqueteur, 
								$date, $plage_horaire_debut, 
								$plage_horaire_fin )
	{
		$db = $this->_em->getConnection();

		$query = "INSERT INTO zone_enq VALUES (default,
					'$zone', '$enqueteur', $mois, '$date', '$plage_horaire_debut',
					'$plage_horaire_fin', default)";
		$stmt = $db->prepare( $query );
		$r = $stmt->execute();
		return $r;
	}

	public function countPa( $mois, $zone )
	{
		$db = $this->_em->getConnection();
	
		$query = "SELECT COUNT(id) as nb_pa FROM fichier_global WHERE mois IN('$mois')
				AND zone IN ('$zone')";
	
		$stmt = $db->prepare($query);
		$stmt->execute();
		$result = $stmt->fetchAll();
	
		return $result;
	}

	public function countPaDebut( $mois, $zone )
	{
		$db = $this->_em->getConnection();
	
		$query = "SELECT nom_arret FROM fichier_global WHERE mois IN('$mois')
				AND zone IN ('$zone') AND ordre=1";
	
		$stmt = $db->prepare($query);
		$stmt->execute();
		$result = $stmt->fetchAll();
	
		return $result;
	}

	public function getLignes( $mois, $zone )
	{
		$db = $this->_em->getConnection();

		$query = "SELECT DISTINCT(libelle_commercial) as lbl_com FROM fichier_global 
					WHERE mois=$mois AND zone IN('$zone')";

		$stmt = $db->prepare($query);
		$stmt->execute();
		$result = $stmt->fetchAll();
	
		return $result;
	}

	public function countPaFin( $mois, $zone )
	{
		$db = $this->_em->getConnection();
	
		$query = "SELECT nom_arret FROM fichier_global WHERE mois IN('$mois')
				AND zone IN('$zone') AND ordre=(
    				SELECT max(ordre) FROM fichier_global WHERE mois IN('$mois')
				AND zone IN('$zone')
    		)";
	
		$stmt = $db->prepare($query);
		$stmt->execute();
		$result = $stmt->fetchAll();
	
		return $result;
	}

}
