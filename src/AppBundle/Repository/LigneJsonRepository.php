<?php

namespace AppBundle\Repository;

/**
 * LigneJsonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LigneJsonRepository extends \Doctrine\ORM\EntityRepository
{
    public function getLignes( $date )
	{
		$db = $this->_em->getConnection();

        if( ($date!=null) || (!empty($date)) )
	        $query = "SELECT DISTINCT(date), ligne  FROM questionnaire_s WHERE valid=1 AND date='$date'
						AND json=0 ";
        else $query = "SELECT DISTINCT(date), ligne FROM questionnaire_s WHERE valid=1 AND json=0 ";
	
		$stmt = $db->prepare($query);
		$stmt->execute();
		$result = $stmt->fetchAll();
	
		return $result;
	}

	public function listIdByLineDate( $ligne, $date )
	{
		$db = $this->_em->getConnection();

        $query = "SELECT id FROM questionnaire_s WHERE valid=1 
					AND json=0 AND ligne='$ligne' 
					AND date='$date'";
	
		$stmt = $db->prepare($query);
		$stmt->execute();
		$result = $stmt->fetchAll();
	
		return $result;
	}

	public function getInfosLigne( $ligne )
	{
		$db = $this->_em->getConnection();

        $query = "SELECT id, ligne, date, json FROM questionnaire_s WHERE ligne='$ligne' ";
	
		$stmt = $db->prepare($query);
		$stmt->execute();
		$result = $stmt->fetchAll();
	
		return $result;
	}
	
	public function updateValue( $id, $value )
	{
		$db = $this->_em->getConnection();

        $query = "UPDATE questionnaire_s SET json=$value WHERE id=$id ";
	
		$stmt = $db->prepare($query);
		$stmt->execute();

	}
}
